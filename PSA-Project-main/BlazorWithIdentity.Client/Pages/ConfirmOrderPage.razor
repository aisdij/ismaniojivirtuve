@page "/confirm-order"
@using Project.Frontend.Website.Services;
@layout Shared.MainLayout
@inject NavigationManager navigationManager
@inject IAuthenticationService authenticationService
@inject IWebsiteHttpClient webHttpClient

<PageTitle>Create Shop Item</PageTitle>

<div class="container mt-md-5">
    <div class="row justify-content-md-center">
        <div class="col-sm-6">
            <div class="card">
                <div class="card-header">
                    <h1 class="h2 text-center">Patvirtinti Užsakymą</h1>
                </div>
                <div class="card-body">
                    <EditForm class="form-signin" OnValidSubmit="ConfirmOrder" Model="confirmOrderRequest">
                        <DataAnnotationsValidator />

                        <div class="form-floating mb-3">
                            <InputText id="inputAddress" class="form-control" @bind-Value="confirmOrderRequest.Address" autofocus placeholder="" />
                            <label for="inputAddress">Adresas</label>
                            <ValidationMessage For="@(() => confirmOrderRequest.Address)" />
                        </div>

                        <div class="form-floating mb-3">
                            <InputText id="inputCity" class="form-control" @bind-Value="confirmOrderRequest.City" autofocus placeholder="" />
                            <label for="inputCity">Miestas</label>
                            <ValidationMessage For="@(() => confirmOrderRequest.City)" />
                        </div>

                        <div class="form-floating mb-3">
                            <InputNumber id="inputFlatNumber " class="form-control" @bind-Value="confirmOrderRequest.FlatNumber" autofocus placeholder="" />
                            <label for="inputFlatNumber">Buto Numeris</label>
                            <ValidationMessage For="@(() => confirmOrderRequest.FlatNumber)" />
                        </div>

                        <div class="form-floating mb-3">
                            <InputText id="inputPostalCode" class="form-control" @bind-Value="confirmOrderRequest.PostalCode" autofocus placeholder="" />
                            <label for="inputPostalCode">Pašto Kodas</label>
                            <ValidationMessage For="@(() => confirmOrderRequest.PostalCode)" />
                        </div>

                        <div class="form-floating mb-3">
                            <InputTextArea id="inputAdditionalInfo" class="form-control" @bind-Value="confirmOrderRequest.AdditionalInfo" autofocus placeholder="" />
                            <label for="inputAdditionalInfo">Papildoma Informacija</label>
                            <ValidationMessage For="@(() => confirmOrderRequest.AdditionalInfo)" />
                        </div>

                        <div class="d-grid gap-2">
                            <button class="btn btn-lg btn-primary btn-block" type="submit">Patvirtinti Užsakymą</button>
                        </div>

                        <label class="text-danger">@error</label>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    CreateOrderRequest confirmOrderRequest { get; set; } = new CreateOrderRequest();
    string error { get; set; }

    async Task ConfirmOrder()
    {
        error = null;
        try
        {
            confirmOrderRequest.fkOrderType = OrderType.DeliverItem;
            confirmOrderRequest.fkOrderStatus = OrderStatus.Unpaid;
            CreateOrderResponse order = await webHttpClient.DoPostAsync<CreateOrderRequest, CreateOrderResponse>(confirmOrderRequest, "api/order");
            navigationManager.NavigateTo($"/confirm-payment/{order.OrderId}");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}